#!/usr/bin/env ruby
#  ---
#  title:  find file menu
#  author: emil lenz
#  email:  emillenz@protonmail.com
#  date:   2024-10-09
#  dependecies:
#  - rofi
#  ---

require 'open3'
require 'English'

def display_help
        msg = <<~MSG
                DESCRIPTION ::
                        - select (rofi) and print or open (xdg-open) a file from the file-list generated by COMMAND.
                        - if the user supplies `--base-directory DIR` to COMMAND, we hide the common prefix in the rofi selection menu for less clutter (but still return the full filepath).

                USAGE ::
                        find-file-menu [FLAGS] COMMAND
                        - if using fd, ensure to use `--base-directory=DIR` in the COMMAND

                FLAGS ::
                        -p, --print :: print selected file to stdout instead of opening it

                EXAMPLES ::
                        find-file-menu fd '.' --base-directory=$HOME/Documents books
        MSG
        puts msg
end

ROFI_CMD = %w[rofi -dmenu -no-custom -i -p find-file].freeze

def main
        if ARGV.include?('-h') || ARGV.include?('--help')
                display_help
                exit(0)
        end

        printflag = ARGV.any? { |it| it =~ /-p|--print/ }
        argv = if printflag
                       ARGV.reject { |it| it =~ /-p|--print/ }
               else
                       ARGV
               end

        files, status = Open3.capture2(*argv)
        exit 1 unless status.success?

        file, status = Open3.capture2(*ROFI_CMD, stdin_data: files)
        exit 1 unless status.success?

        file_full_path = if argv[0] == 'fd' && argv.include?('--base-directory')
                                 File.join(argv[argv.index('--base-directory') + 1], file)
                         else
                                 file
                         end.chomp

        if printflag
                puts file_full_path
        else
                Process.detach(spawn('xdg-open', file_full_path, out: File::NULL, err: File::NULL))
        end
end

main
