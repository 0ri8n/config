#!/usr/bin/env bb

;; ---
;; title:  audio output menu
;; author: emil lenz
;; email:  emillenz@protonmail.com
;; date:   [2024-12-06] <- (initial ruby version [2023-05-07])
;; info:
;; - intended for use with a WM.
;; - any provided arguments are directly passed on to dmenu (use dmenu's flags to customize the prompt/theme)
;; dependencies:
;; - dmenu
;; - pactl
;; - dunst
;; ---

(require '[babashka.process :refer [shell process check]])
(require '[clojure.string :as str])
(require '[cheshire.core :as json])

(def sinks
  (->> (shell {:out :string} "pactl" "--format" "json" "list" "sinks")
       deref
       :out
       json/parse-string))

(def sink-inputs
  (->> (shell {:out :string} "pactl" "--format" "json" "list" "sink-inputs")
       check
       :out
       json/parse-string))

(def selected-sink
  (->> (apply process
              {:in (->> sinks
                        (map #(get % "description"))
                        (str/join "\n"))
               :out :string}
              "dmenu"
              "-p" "device >"
              *command-line-args*)
       check
       :out
       str/trim))

(def sink-id
  (as-> sinks x
    (filter #(= (get % "description") selected-sink) x)
    (first x)
    (get x "index")))

(defn main []
  (->> (shell {:out :string} "pactl" "set-default-sink" sink-id)
       check
       :out)

  (doseq [sink sink-inputs]
    (->> (shell {:out :string}
                "pactl" "move-sink-input" (get sink "index") sink-id)))

  (shell "dunstify" "audio-output" (format "changed to: %s" selected-sink)))

(main)
