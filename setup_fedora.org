#+title:  fedora system install
#+author: emil lenz
#+email:  emillenz@protonmail.com
#+date:   [2024-12-01] (moved arch->fedora: [2023-05-28])
#+property:  header-args:sh :tangle yes :shebang #!/usr/bin/env sh

* info
- if you use a different distro you ensure to install at least these packages for the system config to be able to work. (no guarantees...)
- run this script with sudo! (for ~dnf~)

* preliminarys
alias
#+begin_src sh
alias dnf="dnf --assumeyes"
#+end_src

- update all packages before doing anything (+ install basic dependecies)
#+begin_src sh
dnf upgrade
dnf install git
#+end_src

* clone dotfiles
#+begin_src sh
git clone --depth=1 https://github.com/emillenz/config ~/Dotfiles
#+end_src

* link neccessary config files
- we use GNU stow and symlink the important config files to keep them all centralized in the same directory and symlink them to the respective places.
- backup your own config directory if neccessary since this will override any previous configuration.
#+begin_src sh
dnf install stow
mkdir ~/.local/bin
cd ~/Dotfiles
stow --target=$HOME/.config config
stow home
stow --target=/usr/local/bin bin
#+end_src

* zsh: minimalist shell
#+begin_src sh
dnf install zsh
#+end_src

* never sudo-password-prompt
#+begin_src sh
echo "$USER ALL=(ALL:ALL) NOPASSWD: ALL" | sudo tee "/etc/sudoers.d/$USER"
#+end_src

* wm & programs
- i3 :: wm
- mpv :: minimalist video player
- feh :: image viewer
- arandr :: output configurations
- unclutter :: hide mouse cursor after inactivity  @autostart script
- firefox :: browser
- playerctl :: used to control media via keybindings
- bluetoothctl :: setup/manage bluetooth devices
- dunst :: desktop notifications
- feh :: images
- xset :: keyboard settings (repeat off, etc.) @autostart script
- xsetroot :: set wm background to fixed color (=modus-operandi-bg=)
- pamixer :: configure audio
- keepassxc :: passwordmanager.  install browser extension + configure it's settings: run on startup, minimize to systray, don't kill on close.
- zathura :: minmalist pdf viewer (with vim-bindings )
- terminal :: using emacs ~M-x shell~.
- scrot :: screenshots
#+begin_src sh
dnf install i3 xdg-utils xclip arandr mpv brightnessctl unclutter firefox playerctl bluetoothctl dunst feh maim xset xsetroot keepassxc scrot

dnf install zathura zathura-pdf-mupdf

# dependency for fedorea preinstalled volume control
dnf install mesa-libEGL-devel
#+end_src

** systemwide font
#+begin_src sh
git clone --depth 1 https://github.com/protesilaos/iosevka-comfy $HOME/.local/share/fonts
#+end_src

** batsignal
- battery notifications (since we have statusbar turned off) @autostart script
#+begin_src sh
# dependency
dnf install libnotify-devel

git clone --depth=1 https://github.com/electrickite/batsignal && cd batsignal
make
sudo make install
#+end_src

** make scripts executeable
#+begin_src sh
find ~/Dotfiles/bin/.local/bin -type f -exec chmod +x {} \;
#+end_src

** scripting: babashka (clojure)
- required since scripts are written in it.

#+begin_src sh
dnf install clojure curl

bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
#+end_src

* keybindings
- [[https://github.com/xremap/xremap][xremap]]
- configure it to run without ~sudo~ (works after reboot)
#+begin_src sh
dnf copr enable blakegardner/xremap
dnf install xremap-x11 # must be x11 version since we use i3

# Make sure uinput is loaded
/sbin/lsmod | grep uinput || echo uinput | sudo tee /etc/modules-load.d/uinput.conf

# Add your user to the input group and add udev rule
sudo gpasswd -a $(whoami) input
echo 'KERNEL=="uinput", GROUP="input", TAG+="uaccess"' | sudo tee /etc/udev/rules.d/input.rules
#+end_src

* editor: doom emacs
#+begin_src sh
dnf install emacs-gtk+x11

# HACK :: supress pure emacs-gtk warning (fedora problem)
sudo alternatives --set emacs /usr/bin/emacs-gtk+x11

git clone --depth 1 https://github.com/doomemacs/doomemacs $HOME/.config/emacs
$HOME/.config/emacs/bin/doom install
#+end_src

* sshd: for github, sycnthing
#+begin_src sh
sudo systemctl enable sshd
#+end_src

* sync tools
- syncthing :: for keeping filesystem in sync across multiple machines (daily usage).  started manually when sync is required.
- restic :: backup the userfiles (redundency for when harddrive is destroyed / newinstall required / accidental ~rm~).  manually backed up to an external HDD weekly.
#+begin_src sh
dnf install syncthing restic
#+end_src

- timeshift :: backup & restore system configuration (when system breaks)
- anacron :: run ~timeshift~ daily
#+Begin_src sh
dnf install timeshift
echo '1 0 system-backup sudo timeshift --create' | sudo tee --append /etc/anacrontab
systemctl enable crond && systemctl start crond
#+end_src

* c, c++
#+begin_src sh
dnf install cmake gcc clang clang-tools-extra
#+end_src
